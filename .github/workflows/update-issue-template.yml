name: Update Issue Template Versions

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
  schedule:
    - cron: '0 0 * * *' 


jobs:
  update-template:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get card_version tags
        id: get_card_tags
        run: |
          TAGS=$(git tag --sort=-v:refname | grep '^v' | sed 's/^v//' | jq -R -s -c 'split("\n")[:-1]')
          echo "CARD_TAGS=$TAGS" >> $GITHUB_ENV

      - name: Get HA tags
        id: get_ha_tags
        run: |
          git ls-remote --tags https://github.com/home-assistant/core.git | \
            awk -F/ '{print $3}' | grep '^[0-9]' | sort -rV | jq -R -s -c 'split("\n")[:-1]' > ha_tags.json
          HA_TAGS=$(cat ha_tags.json)
          echo "HA_TAGS=$HA_TAGS" >> $GITHUB_ENV

      - name: Update Issue Template with Python
        env:
          CARD_TAGS: ${{ env.CARD_TAGS }}
          HA_TAGS: ${{ env.HA_TAGS }}
        run: |
          python - <<'PY'
          import os, json, sys
          try:
              import yaml
          except ImportError:
              import subprocess
              subprocess.check_call([sys.executable, "-m", "pip", "install", "--quiet", "pyyaml"])
              import yaml

          try:
              card_tags = json.loads(os.environ.get("CARD_TAGS", "[]"))
              ha_tags = json.loads(os.environ.get("HA_TAGS", "[]"))
          except Exception as e:
              print("Error parsing JSON:", e)
              card_tags, ha_tags = [], []

          FILE = ".github/ISSUE_TEMPLATE/bug_report.yml"
          if not os.path.exists(FILE):
              print(f"Error: {FILE} not found")
              sys.exit(1)

          with open(FILE, "r", encoding="utf-8") as f:
              data = yaml.safe_load(f)

          if data is None:
              print("Error: YAML file empty or invalid")
              sys.exit(1)

          updated_card = updated_ha = False
          for item in data.get("body", []):
              if isinstance(item, dict):
                  if item.get("id") == "card_version":
                      attrs = item.get("attributes") or {}
                      attrs["options"] = card_tags
                      item["attributes"] = attrs
                      item.pop("default", None)
                      updated_card = True
                  elif item.get("id") == "ha_version":
                      attrs = item.get("attributes") or {}
                      attrs["options"] = ha_tags
                      item["attributes"] = attrs
                      item.pop("default", None)
                      updated_ha = True

          if not (updated_card or updated_ha):
              print("Warning: Kein Eintrag mit id 'card_version' oder 'ha_version' gefunden.")
          else:
              with open(FILE, "w", encoding="utf-8") as f:
                  yaml.safe_dump(data, f, allow_unicode=True, sort_keys=False)
              print("Successfully updated", FILE)
              for item in data.get("body", []):
                  if isinstance(item, dict) and item.get("id") in ["card_version", "ha_version"]:
                      print(f"{item.get('id')} options:")
                      for v in item.get("attributes", {}).get("options", []):
                          print("-", v)
          PY

      - name: Commit and Push changes
        uses: stefanzweifel/git-auto-commit-action@v7
        with:
          commit_message: "Update issue template with latest card and HA tags"
          branch: main
          file_pattern: .github/ISSUE_TEMPLATE/bug_report.yml
